{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1044{\fonttbl{\f0\fnil\fcharset0 Consolas;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;\red43\green145\blue175;\red163\green21\blue21;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sl240\slmult1\b\f0\fs32\lang9 Dependency Injection\par
\par
\fs22 loosely vs tightely \b0 coupled sytems: refactoring blir enklere med loosely blant annet.\par
Lager et interface som Ninjaklassen implementerer:\par
\par
\cf1\fs19 public\cf2  \cf1 class\cf2  \cf3 Ninja\cf2\par
    \{\par
\tab\tab\cf1 private\cf2  IWeapon weapon;\par
\tab\tab\cf1 public\cf2  \cf3 Ninja\cf2 (IWeapon weapon)\par
        \{\par
\tab\tab\tab\cf1 this\cf2 .weapon = weapon;\par
        \}\par
\tab\tab\cf1 public\cf2  \cf1 void\cf2  Fight()\par
\tab\tab\{\par
\tab\tab\tab weapon.Kill();\par
\tab\tab\}\par
\tab\}\cf0\fs22\par
\par
\par
\cf2\fs19  \cf1 public\cf2  \cf1 interface\cf2  \cf3 IWeapon\cf2\par
    \{\par
        \cf1 void\cf2  Kill();\par
    \}\par
\par
\par
    \cf1 public\cf2  \cf1 class\cf2  \cf3 ThrowingStart\cf2  : IWeapon\par
    \{\par
        \cf1 public\cf2  \cf1 void\cf2  Kill()\par
        \{\par
            Console.WriteLine(\cf4 "Killed by a start man"\cf2 );\par
        \}\par
    \}\par
\par
\par
\lang1033 n\'e5 kan vi definere s\'e5 mange v\'e5pen vi vil og i kosntrukt\'f8ren til ninja tar vi inn v\'e5pen, trenger ikke deklarer hver eneste v\'e5pen.\par
\par
3 ways to add servies:\par
\par
\b singleton \b0 = 1 static service, multiple controlelrs can use it, tho same object\par
\b\par
transient \b0 = stateless, everytime create a new object (services.AddTransient)\par
\par
\b scoped \b0 = a controller asks for 2 objects, 2 arguments, both arguments will get same object, in transient it will recieve 2 different objects\par
second argument specifies which obejct you get: \par
\b services.AddTransient<IWeatherForcastService, IWeatherForcastService>();\par
\b0\par
\par
\par
\b\fs48 CASE STUDY\par
\b0\fs19\par
Group \par
Subject (desc)\par
.NET c# backend\par
\cf0\fs22\lang9 Frontend choose any kind\par
Hosted in azure\par
Make use of Azure services/resources\par
Codebasre stored in devops or github\par
Use CI/CD piplelines from Azure devops (build & release) \par
 - pipelines, auto build project when merging\par
 - Pipelines runs and checks if code can be compiled\par
Git\par
Git workflow / process in place (PR, code reviewing etc)\par
Ask permission to use external services/tooling outside azure\par
BE creative\par
Divide fratures in must have, should have, nice to have\par
Unit tests are bonus points\par
\par
Minimum viable product - work from there\par
\par
\b Ideer\b0\par
Gramitune\par
\par
\cf2\b\fs48\lang1033 AZURE\par
\cf0\ul\b0\fs22\lang9 azure shared responsibility model\cf2\ulnone\lang1033\par
private cloud = datacenter\par
\b infrastructure \b0 (as a service) = hw of the datacenter, you make virtual machines, network of machines in an azure datacenter\par
\b Platform \b0 (as a service) = hw and vm, on top of that web services, web app is a service etaht will underneath use machine then hw. \par
\b app service, \b0 its not really tied to .net: node, java php, python etc. \par
\b App service plan\b0  groups app in a subscription, multiple app service plans in a \b Workgroup(?)\b0 . Share plan with multiple webapps.\par
\b Hybrid connection \b0 to connect to on premise DB\par
\b App service env \b0 = expensive, can choose what server app runs on/choose to run it standalone w/o other apps in same container\par
\b\par
Services \b0 = app service web apps, needs a container,\par
\b Images, \b0 WEb appp with git deployment source\par
\par
app service settings overrides web.config or appsettings.json (modern file), hidden by azure by default, can also use app settings, con strings, default docs, path mappings, custom container.\par
\par
\b App run time\b0 , have to update .net, python, java, php or whatever manually, can do it with the CLI\par
\par
\b CORS, different urls = bad man, \b0 only applications on this specific domainname can access the API. \par
\b\par
Os patching \b0 is automatic since we use \b app as a service\par
\par
\b0 each app has a single ibound IP Adress, inbound can change, can use static inbound ip, each app has a set number of outbound IP\par
\par
\b Scaling apps\par
autoscale\b0  = elastic scaling, scales as load increases\b , scales out or in, \b0 also possible to scale manually\par
\b patterns: \b0 scale on cpu, weekdays/weekends, holidays, cusom metric\par
scale up \b =\b0  get a heavier machine/more computer power\par
scale out = run on several machines\par
\b autoscale workflow\b0\par
\b best practices\b0  : min max values are differnet etc se powerpoint\par
\par
\b deployment slots, part of app service\b0  = something you dont deploy directly to production, QA quality assurance before production, testing to see if everything is fine. YOu can make any amount of slots, dont need 5 different app services but rather 5 slots, use it to test code before deployment, \par
\b deploy -> staging <-(swap)-> production\b0 , if something goes wrong with what you deployed, you can reswap. \par
\b Auto swap, \b0 minimize cold starts and downtime, feks f\'f8rste req til api er treg = cold, varmer opp apien slik at f\'f8rste kall er raskt.\par
Route traffic between slots, say production has 75% and new deploys has 25%. Normally all traffic is routed to production. You can move users gradually from old to new version.\par
Kan sette alle disse greiene fra \b Azure CLI\b0 .\par
\par
az-204 git, start med tasks, allfiles/labs/01/images\par
\par
\par
\par
\b\fs48 Azure functions\b0\par
\fs22\par
Trigger -> manually trigger ufntion, timed trigger, http request\par
namespace webjobs\par
for running small pieces of code/functions in the cloud\par
3 types of \b scaling\b0 : \par
\b consumption\b0  -> only pay if you run your function, auto scaling\par
\b premium\b0  -> for enterprise where you want a connection back to your own premise\par
\b App service Plan \b0 -> will follow scaling rules of the plan\par
\par
Can run locally on devolpement machine, number of emulators feks storage emulator\par
\par
er en service\par
\par
service -> function -> excecution\par
\par
Function itself needs to have access to the storage count (input binding) -> (output binding). THis bindings prevents having to add con strings which is a declerative way to connect to data from your code. \par
\par
blobs = any kind of data you can put in storage, eks en bildefil\par
\par
\b Azure Virtual Network\b0\par
premium stuff, alows blant annet secure outbound.\par
Virtual network makes a bunch of machines talk to eachother without an actual conection. \par
\par
\b Best practices\par
\b0 Performence -> avoid long running functions\par
Stateless -> if it runs twice it will do the excact same thing\par
Code defensively -> Assume code will have to run from a previous fail point\par
Queable functions -> runs one after another, if not queable: \b Durable functions or azure logic apps\b0\par
\par
EXTENSIONS IN VS CODE/2019 TO MAKE THESE FUNCTIONS, do this to get them in a rep\par
\par
\b\fs28 HOW TO functions\par
\b0\fs22 vs 2019 -> Azure Functions template -> (some support for .net 5) -> choose trigger type (queue trigger in this case, need storage account for it) -> *queue name, name it man*\par
\par
\b kode\b0\par
(kan inneholde flere prosjekter med funksjoner, alt blir published i samme bolk) -> mye dekorat\'f8rer: [*type* (eks BlobTrigger)]\par
\par
localsettings-file -> info om ting og storage account\par
\par
publish knapp for \'e5 publishe\par
\par
portal.azure.com -> resource group -> *nanv p\'e5 funksjon*\par
\par
functions tab to the left\par
\par
if u create your functions in an IDE, you cant edit them in Azure Portal.\par
\par
Nice about queues: its durable, if a system that should read the queue is down, its still there when it is back up\par
\par
Can use functions feks to send sms approval message or receipts when a specific post or get/http req is triggered\par
\par
storage account -> 4 services, containers are basically folders, tables are excel sheets good for massive amounts of data, file shares and queues\par
\par
\b Azure Storage Explorer \b0 -> applikasjon for \'e5 drive med storage account om du ikke liker nettleserversjon, og \'e6rlig hvem gj\'f8r det\par
\par
\b csx\b0  = c sharp script\par
\par
\b Durable Func types\b0 : orchestral \par
\par
\par
\par
\fs48\par
\b Cloud security\b0\par
\fs22\par
\par
Manage keys, secrets, certificates with \b Azure KeyVault API\b0\par
 - dont hard code secrets\par
 - Safeguard cryptographic keys and other secrets that coud apps and services use:\par
    * increase security nad control over keys and passwrds, \par
    * App has no direct access to keys\par
    * FIPS 140-2 validatioan\par
Vault = logical group of secrets\par
Admin = \b vault owner\par
\b0 User = \par
\par
\b managed identity\b0 : assigned identity for azure resource, get an identity and use htat identity to access vault\par
\b Service Principal\b0 : can provide secrets, hard to use not recommended\par
\par
\b Vault types: \b0 certificates, keys, secrets, certificates adds extra step of security for identification\par
\b Secret \b0 is like username and password, key value pair\par
 \par
\b Azure Active Directory (AD)\b0 : Admin uses this to register stuff, like a controll center to give you resources within the company. Can feks koble til office lisensene dine her. Good tool for system administrator. Can use it for adding special identitites. \b Direct authentiation\b0 . \par
\par
\b System assigned managed identity and user assigner mangaed identity\par
\b0\par
\b System ami: \b0 shares a lifecycle with assosicated azure resource, identity is stored in active directory, is tied with other resources.\par
\b user ami: \b0 onde identity over multiple resources, smart if you have a lot of resources so they all get the same identity. YOu can scope identity to other resources,user AMI is in its own right a resource, removing a resource wont remove identity. wordloads on multiple instances.\par
\par
\b Feature flags: \b0 key value pair, name :string value: bool, say you have a rep that automaticallly pushes new stuff to production, with feature flag you can register that module as true or false/ready for prod or not.\par
\b App configuration\b0 : you haave several environments before production like testing and staging then production. \par
\b Labels \b0  are used to differentiate ket values\par
\b Feature management: \b0 boolean, triggers wheter a code block should run or not\par
\par
\par
{\b{\field{\*\fldinst{HYPERLINK https://www.examcollection.com/AZ-204.html }}{\fldrslt{https://www.examcollection.com/AZ-204.html\ul0\cf0}}}}\f0\fs22\par
\par
\b\par
\b0\fs48\par
\b Implement API Management\b0\par
\fs22\par
Company want o expose data to anyone, like open source data. \par
THIS helps you with the magement of it. ID you have 10 apis, maybe some are public and some private, so youi have to subrscribe to them, this helps you with that. Use case is for enterprise size and if you hve several apis, not just one. \par
\par
\b Developer portals\b0  - can automatically generate dev portal, can get key for api, see if its public or private, a lot of tweaking like throttling and cache mechanisms.\par
\b BAckend api \b0 - talks with business logic\b\par
frontend api \b0 - the facade hosyed by api manageement to obfuscate your backend\b\par
product \b0 - one or more apis in a bundle, can be open or protecded, open is open protecded you need to subrscribe to it, for example enterprise api/advanced api is protected and the basic api is public\b\par
operation\b0  - an api call/endpoints/operations\par
differentiate\par
\b versions \b0 - a breakign change in the front end api, maybe a client uses the old a new version breaks something\par
\b revision\b0  -  a non breakign change to frontend api\par
\b developer portal \b0 - intergface that devs use to learn the api\par
\par
\b Cognitive services\b0\par
\par
\b API management\b0 , you can edit headers to not return unnececery or dangerous data, like data that can be used by hackers.\par
\par
\par
\b what are certificates\b0 : it's a cryptographic key, issuer is who created the certificate, additional secutiry, on api manageemndt you send certificate and the server will check it, the server generated the certificate, public and private keys. acps encyption(?). \par
\par
\par
\b\fs44 MODULE 10\par
\b0\fs22 event based architecture\par
Messaging based are different from event based\par
\b\par
CLOUD MESSAGING OPTIONS (for azure at least)\par
event grid \b0 dont think about scalibility, wouldnt build a bisuness based event grid there are better ways\par
\b event hubs \b0 a special place for big data, \par
\b service bus \b0 messaging solution, similar to event driven architecture\b\par
queue storage \b0 messaging solution, similar to event driven architecture, publish message and OK from reciever it was recieved, simple queing, lightweight, not a lot of functionality, wouldnt recommend it for big business, but nice for hobby project\par
\par
say youre making a web shop, you have a front end where ppl can buy goods, add products to shopping basket, if you look at all the logic for the order process, if you make a tight coupling with rontend and middleware (api) it wont scale good with increased traffic, so you want to make a decoupling: you dont want all the order handling etc be in your backend, you want to offload that to another backend. So you have service bus that take messages about orders and will be stored there until order is processed. \par
\par
2 communication mechanisms: \par
\b queue \b0 and \b topics\b0\par
\par
\b queue:\b0\par
________________________\par
|__|__|__|__|__|__|__|__|-----O\par
  |  | \tab\tab\tab  \tab ||\par
MESSAGES\tab\tab\tab     BACKEND\par
(sends message)\tab\tab (process message)\par
in queue mesages are waiting to be processed by backend.\par
Sending of message and processing arent "stable", backend can be slower than messages and the queue works as a buffer. Doesnt matter how big the queue is, you just have to wait for confirmation from backend that the message has been processed, doesnt matter if it takes 1 second or 5 minutes, theres still a queue. \par
\par
\b topic:\b0\par
in queue a reciever of message gets some of the msages, not all, in topic all the senders recieve all the responses.\par
\par
\par
\par
\b\fs48 Caseoppgave\par
\b0\fs22\par
\b Teknologier for musikkapp\par
\b0\par
Websockets: {\cf0{\field{\*\fldinst{HYPERLINK https://docs.microsoft.com/en-us/aspnet/core/fundamentals/websockets?view=aspnetcore-5.0 }}{\fldrslt{https://docs.microsoft.com/en-us/aspnet/core/fundamentals/websockets?view=aspnetcore-5.0\ul0\cf0}}}}\f0\fs22  SignalR\par
\par
{\cf0{\field{\*\fldinst{HYPERLINK https://github.com/JamesKyburz/youtube-audio-stream/blob/master/index.js }}{\fldrslt{https://github.com/JamesKyburz/youtube-audio-stream/blob/master/index.js\ul0\cf0}}}}\f0\fs22  bruker ytdl for \'e5 streame lyden: {\cf0{\field{\*\fldinst{HYPERLINK https://github.com/fent/node-ytdl }}{\fldrslt{https://github.com/fent/node-ytdl\ul0\cf0}}}}\f0\fs22\par
c# versjon, men uten stream? {\cf0{\field{\*\fldinst{HYPERLINK https://github.com/bota87/ytdl-cs }}{\fldrslt{https://github.com/bota87/ytdl-cs\ul0\cf0}}}}\f0\fs22\par
.net youtube data, henter video og lydinfo (audiourl wut?) {\cf0{\field{\*\fldinst{HYPERLINK https://github.com/barakaally/dotnet-youtube-data }}{\fldrslt{https://github.com/barakaally/dotnet-youtube-data\ul0\cf0}}}}\f0\fs22\par
\par
En rep som streamer youtube audio {\cf0{\field{\*\fldinst{HYPERLINK https://github.com/DoctorFran/Spobrify-public }}{\fldrslt{https://github.com/DoctorFran/Spobrify-public\ul0\cf0}}}}\f0\fs22\par
\par
for youtube kan vi kanskje bruke ffmpeg, vil kunne hente lydstream og pipe det ut til gitt rom, gj\'e6res fra backend (ressurskrevende, men kanskje smart for oppgaven). \par
Kan ogs\'e5 implementere youtube sin api i grensesnittet, fjerne avsplilleren visuelt og la klient ta seg av workload. \par
\par
s\'e5 for youtube:\par
bascially s\'e5 virker det som man kan hente en video og destruktere den. Mna kan da hente ut kun lydstreamen. For \'e5 spille av denne streamen kan man bruke ffmpeg (eller noe nanet kanskje?) som kan spille av lydstreamen. Tror jeg...\par
\par
x|\par
\par
\par
\b Ressurser\b0\par
{\cf0{\field{\*\fldinst{HYPERLINK https://github.com/JohnnyCrazy/SpotifyAPI-NET }}{\fldrslt{https://github.com/JohnnyCrazy/SpotifyAPI-NET\ul0\cf0}}}}\f0\fs22\par
{\cf0{\field{\*\fldinst{HYPERLINK https://github.com/Ringobot/SpotifyApi.NetCore }}{\fldrslt{https://github.com/Ringobot/SpotifyApi.NetCore\ul0\cf0}}}}\f0\fs22\par
\par
\b Description\b0\par
A web app that hosts rooms where users can listen to music fetched from youttube/spotify/soundcloud\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\b\par
\cf0\b0\lang9\par
}
 